<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerRelog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>